[General]

cmdenv-interactive = false
cmdenv-express-mode = true
record-eventlog = false

#seed-set = ${processid}
#repeat = 4


# ************ InetUnderlay2 backbone configurationv  **************************

**.vector-recording-intervals = 0..1800
InetUnderlayNetwork2.underlayConfigurator.terminalTypes = "oversim.underlay.inetunderlay.InetOverlayHost"
InetUnderlayNetwork2.*ccessRouter[*].accessNet.channelTypesTx = "oversim.common.denacast_channel"
InetUnderlayNetwork2.*ccessRouter[*].accessNet.channelTypesRx = "oversim.common.source_channel"
InetUnderlayNetwork2.churnGenerator*.channelTypesTx = "" # not used in InetUnderlay
InetUnderlayNetwork2.churnGenerator*.channelTypesRx = "" # not used in InetUnderlay
InetUnderlayNetwork2.backboneRouterNum = 1
InetUnderlayNetwork2.overlayBackboneRouterNum = 0
InetUnderlayNetwork2.accessRouterNum = 2
InetUnderlayNetwork2.overlayAccessRouterNum = 0
InetUnderlayNetwork2.connectivity = 1
InetUnderlayNetwork2.underlayConfigurator.startIP = "1.1.0.1"
InetUnderlayNetwork2.outRouterNum = 0
# ************ BriteIPv4Network backbone configuration **************************

BriteIPv4Network.underlayConfigurator.terminalTypes = "oversim.underlay.inetunderlay.InetOverlayHost"
BriteIPv4Network.*ccessRouter[*].accessNet.channelTypesTx = "oversim.common.denacast_channel"
BriteIPv4Network.*ccessRouter[*].accessNet.channelTypesRx = "oversim.common.source_channel"
BriteIPv4Network.churnGenerator*.channelTypes = "" # not used in InetUnderlay
BriteIPv4Network.churnGenerator*.channelTypesRx = "" # not used in InetUnderlay
BriteIPv4Network.backboneRouterNum = 57
BriteIPv4Network.overlayBackboneRouterNum = 0
BriteIPv4Network.accessRouterNum = 93
BriteIPv4Network.overlayAccessRouterNum = 0
BriteIPv4Network.connectivity = 1
BriteIPv4Network.underlayConfigurator.startIP = "1.1.0.1"
BriteIPv4Network.outRouterNum = 0
BriteIPv4Network.churnGenerator[*].channelTypes = ""
BriteIPv4Network.churnGenerator[*].channelTypesRx = ""

# ************ GTITM_TS_IPv4Network backbone configuration **************************

GTITM_TS_IPv4Network.underlayConfigurator.terminalTypes = "oversim.underlay.inetunderlay.InetOverlayHost"
GTITM_TS_IPv4Network.*ccessRouter[*].accessNet.channelTypesTx = "oversim.common.denacast_channel"
GTITM_TS_IPv4Network.*ccessRouter[*].accessNet.channelTypesRx = "oversim.common.source_channel"
GTITM_TS_IPv4Network.backboneRouterNum = 28
GTITM_TS_IPv4Network.overlayBackboneRouterNum = 0
GTITM_TS_IPv4Network.accessRouterNum = 784
GTITM_TS_IPv4Network.overlayAccessRouterNum = 0
GTITM_TS_IPv4Network.connectivity = 0.8
GTITM_TS_IPv4Network.underlayConfigurator.startIP = "10.1.0.1"
GTITM_TS_IPv4Network.outRouterNum = 0
GTITM_TS_IPv4Network.churnGenerator[*].channelTypesTx = ""
GTITM_TS_IPv4Network.churnGenerator[*].channelTypesRx = ""


#*********************** VodStream / Player settings ********************

**.measuringTime = 20s
**.Fps = 25
**.gopSize = 12
**.numOfBFrame = 2
**.mpeg4vodstream.nof=1
**.mpeg4vodstream.traceFile1 =  "./Traces/Verbose_ARDTalk_30min.dat"
#**.mpeg4vodstream.traceFile1 = "./Traces/Verbose_ARDTalk_5min.dat"
**.mpeg4vodstream.traceFile2 = "./Traces/Verbose_ARDTalk_10min.dat"
**.mpeg4vodstream.traceFile3 = "./Traces/Verbose_ARDTalk_15min.dat"
**.mpeg4vodstream.traceFile4 = "./Traces/Verbose_ARDTalk_20min.dat"
**.mpeg4vodstream.traceFile5 = "./Traces/Verbose_ARDTalk_25min.dat"
**.mpeg4vodstream.traceFile6 = "./Traces/Verbose_ARDTalk_30min.dat"
**.mpeg4vodstream.traceFile7 = "./Traces/Verbose_ARDTalk_35min.dat"
**.mpeg4vodstream.traceFile8 = "./Traces/Verbose_ARDTalk_40min.dat"
**.mpeg4vodstream.traceFile9 = "./Traces/Verbose_StarWarsIV_50min.dat"
**.mpeg4vodstream.traceFile10 = "./Traces/Verbose_StarWarsIV_60min.dat"

**.videoAverageRate1 = 512 Kbps
#**.videoAverageRate1 = 512 Kbps
**.videoAverageRate2 = 512 Kbps
**.videoAverageRate3 = 512 Kbps
**.videoAverageRate4 = 512 Kbps
**.videoAverageRate5 = 512 Kbps
**.videoAverageRate6 = 512 Kbps
**.videoAverageRate7 = 512 Kbps
**.videoAverageRate8 = 512 Kbps 
**.videoAverageRate9 = 512 Kbps
**.videoAverageRate10 = 512 Kbps

#**************************** UDP ***********************
**.udp.dropErrorPackets = false

# ****************** Churn settings ****************

#**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.NoChurn oversim.common.DenaCastNoChurn"
**.churnGeneratorTypes = "oversim.common.NoChurn oversim.common.NoChurn oversim.common.NoChurn"


**.churnGenerator[0].initPhaseCreationInterval = 0s
**.churnGenerator[0].targetOverlayTerminalNum = 1
**.churnGenerator[0].tier1Type = "oversim.common.TierDummy"
**.churnGenerator[0].overlayType = "oversim.overlay.cdnp2ptracker.CDNP2PtrackerModules"
**.churnGenerator[0].tier2Type = "oversim.common.TierDummy"
SimpleUnderlayNetwork.churnGenerator[0].channelTypesTx = "oversim.common.source_channel"
SimpleUnderlayNetwork.churnGenerator[0].channelTypesRx = "oversim.common.source_channel"

**.churnGenerator[1].initPhaseCreationInterval = 0s
**.churnGenerator[1].tier2Type = "oversim.tier2.vodstream.MPEG4VodStreamModules"

**.churnGenerator[1].overlayType = "oversim.overlay.cdnserver.CdnServerModules"
**.churnGenerator[1].tier1Type = "oversim.applications.vodapp.VodAppModules"
SimpleUnderlayNetwork.churnGenerator[1].channelTypesTx = "oversim.common.VodSource_channel"
SimpleUnderlayNetwork.churnGenerator[1].channelTypesRx = "oversim.common.VodSource_channel"

**.churnGenerator[2].lifetimeMean = 200s
**.churnGenerator[2].initPhaseCreationInterval = 2s


**.churnGenerator[2].tier2Type = "oversim.tier2.vodplayer.MPEG4PlayerModules"
**.churnGenerator[2].overlayType = "oversim.overlay.peersmesh.PeersMeshModules"
**.churnGenerator[2].tier1Type = "oversim.applications.vodapp.VodAppModules"



#****************** VodApp settings *******************
**.limitedBuffer=false          #if it is true  buffer is windowOfIntrest else buffer is film length
**.windowOfIntrest = 60s 		#How much video is maintain in peer buffer (Window of intrest)

**.vodapp.bufferMapExchangePeriod = 1s
**.adaptiveBufferMapXchange=true #if it is true adaptive buffering start- and all video is maintain in peer buffer -AGH
**.firstAdaptiveEpsilon=30 # for adaptive buffer Xchange Size-AGH
**.epsilon=5 # for adaptive buffer Xchange Size-AGH
**.vodapp.useRequestBigBufferMap=true # AGH-for adaptive buffer map exchange
**.redundantEpsilon=2 # for adaptive buffer Xchange Size-AGH
	
**.vodapp.startUpBuffering = 8s
**.vodapp.maxDownloadFurtherPlayPoint=60s # Note: it must bigger than startUpBuffering!
**.vodapp.rateControl = true
**.vodapp.maxFrameRequestPerBufferMapExchangePeriod=25 # for rate control- must bigger than FPS
**.vodapp.receiverSideSchedulingNumber = 1
**.vodapp.senderSideSchedulingNumber = 1
**.vodapp.averageChunkLength = 130 Kb
**.chunkSize = 1 Frames
**.vodapp.meshTestwithoutStreaming=false # its only for test structure- for streaming it must be false-AGH
**.vodapp.limitSeekForwardForTransiantState=true # in my structure at first all cascade not exsist - AGH
**.vodapp.limitTimeFromSimTime=30s
**.vodapp.discontinuityTimeParam=16s
#***** Emergency connect to server *******AGH
**.vodapp.useEmergencyConnection=false
**.vodapp.emergencyMinVideoInBuffer=3s
**.vodapp.emergencyVideolengthBuffer=12s
#*********retryReq**********AGH
**.vodapp.deadLineFrame=2s
**.vodapp.retryframeReqTime=16s
**.vodapp.retryReq=true #CRQ-AGH
**.vodapp.retryReqChunksIfNeighborLeave=true #NEEC-AGH

#******************overlay settings*******************
**.meshStructure=0 # /// 0 is simple mesh /// 1 is CTMVod /// 2 is TMVoD /// (AGH)
**.directConnectionToServers=2 # for each cascade (cluster) AGH
**.meshType=0 # 0 is randomly and 1 is ORDINAL -AGH
**.overlay.peersmesh.simpleMeshType=1 # in -0- active and passive Neighbors not important but in -1- are important AGH
**.isStable=0 # if is 1 peer dont exit from system -2 it can seek forward-3 can exit with exit prob-4 can exit and seek forward  -0 (real world)is base on result of paper"can vod profitable"-AGH 
**.overlay.peersmesh.percentofExit=-1 # its between 0 to 1 and if it is -1 (real world)then Exit is base on result of paper"can vod profitable"-AGH
**.overlay.peersmesh.percentOfNotGracefullExit=0.25 #its between 0 to 1-AGH
**.checkNeighborsTimeOut=true # when we have peers that Not Gracefull Exit- it must be true-AGH
**.neighborsTimeOutLimit=7s #second-AGH
**.overlay.peersmesh.startExitSimTime=200 #AGH
**.overlay.peersmesh.percentofInteractive=-1 # its between 0 to 1 and if it is -1 (real world)then interactive is base on result of paper"can vod profitable"-AGH
**.overlay.peersmesh.startIntractiveSimTime=200 #sim time that after this time peer can interactive-AGH
**.overlay.peersmesh.usingSpecialInteractiveNeghborReq=true # we use this for reducte interactive Delay-AGH
**.activeNeighbors = 3
**.passiveNeighbors = 3
**.cdnClients=3      #its maintain max clients that for each video can connect Direct to cdn server #**.overlay.cdnp2ptracker.CdnClients=1   #its maintain max clients that for each video can connect Direct to cdn server
**.overlay.peersmesh.changeProbability = -1 #its p= this is prob. of change video and 1-p is prob. of Exit from system.
**.neighborNotificationPeriod = 2s
**.packetUnit = 1000 Byte
**.sourceBandwidth = 15 Mbps # see oversim.common.channels.denacastVodSource_channel
	#	 peers min Download Bandwidth 1000 Kbps -AGH- see common.channels.VodDownload_channel
	# 	 peers max Download Bandwidth 4000 Kbps -AGH -see common.channels.VodDownload_channel
	#	 peers min Upload Bandwidth  350 Kbps-AGH -see common.channels.VodUpload_channel
	#	 peers max Upload Bandwidth 2048 Kbps-AGH- see common.channels.VodUpload_channel
**.percentOfFreeRiders = 0.2 # *100= percentOfFreeRiders is between 0 and 1-AGH
**.overlay.peersmesh.adaptiveNeighboring = false 
**.serverGradualNeighboring = true
**.serverGradualNeighboringAverageTime=25 #it used for structure 0-AGH
**.pMax = 0.001
#*****improvment****** AGH
**.improvmentStructure= false 
**.improvmentLineGradientTreshold= 0.025  #its gradient of iinear(Kbps-Time)-AGH
**.improvmentTradeoffParam =0.5 # between 0 and 1 -AGH- trade off parameter between bandwidth difference and playback difference
**.improvementMinTreshold=100 Kbps
**.improvementPeriod= 2s
**.improvementProcessTimeLenght=8s # 18 is better

#******************Tracker settings*******************
**.overlay.cdnp2ptracker.connectedMesh =false
#*****use pre watch video*****AGH
**.usePreVideo=false #if its true peer that watch a video in past can serve this video when he dont wach this- only when adaptive buffer map is used (AGH). 
**.overlay.cdnp2ptracker.varianceTime=10 #its in second(AGH) 
**.overlay.cdnp2ptracker.minTimeLenghtWP=15 #its in second(AGH)
#*****cascades******** AGH
**.overlay.cdnp2ptracker.diferenceForCascadeMinesforFWD=0.5 # for seek forward its between 0 and 1  -AGH
**.overlay.cdnp2ptracker.cascadeMinTime=10 # its in second(AGH)
**.overlay.cdnp2ptracker.cascadeMaxTime=120 # its in second(AGH)
**.overlay.cdnp2ptracker.cascadeMinNodes=15 #on each cascade(AGH) 
**.overlay.cdnp2ptracker.cascadeMaxNodes=15 # on each cascade(AGH)
**.overlay.cdnp2ptracker.maxCascadeNumber=100 # per video(AGH)
**.overlay.cdnp2ptracker.reserveConnectionTime=2# its in second (AGH)

include ./GTITM_TS_InetUnderlay.ned-ASIDs.ini